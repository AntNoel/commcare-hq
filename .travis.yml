language: python
group: edge
branches:
  only:
    - master
env:
  jobs:
    - TEST=python NOSE_DIVIDED_WE_RUN=05 JS_SETUP=yes
    - TEST=python NOSE_DIVIDED_WE_RUN=6a JS_SETUP=yes
    - TEST=python NOSE_DIVIDED_WE_RUN=bf JS_SETUP=yes
    - TEST=python-sharded-and-javascript JS_SETUP=yes
  global:
    - REUSE_DB=true  # can't drop the citus DB since it's the postgres database
#    - JS_TEST_EXTENSIONS=icds_reports
    # DATADOG_API_KEY
    - secure: "J3mcwhMIQ14fQBRbHlYlJIkaEyDLix9ObZ5PNRrrUqGvUUmuHPMqTNNcr1u0FKVhlOHp8jnhxD60Kv5pYQ6NZj4mMnNS6KyUyVGeYaGO4FtahDwbK5wLnyiEPC1dwCH6d6mTut/76GpaiOp0QN2RAtu5NoXHv4Ju4iIGuiUz3ok="
    # DATADOG_APP_KEY
    - secure: "MsIDRluQpO98ipEBwsUm6W838z7jdT5dQ9dLgcq3jKLBU1j+4XZMZA0zPrswUBbZbNsvgSurDqHvRCJGY7UZ9HQrEdQC24Fk5Up6ZUv77GNHglJ01nIkTAE1t+mYJc29fpiMIaPduLU6dYMdy1hdysdlXBRCNWNvAVSAFHqWgYs="
    # DOCKER_USERNAME
    - secure: "YJYYdkYEzN33IwHGMhFy8NIKy5fm3IjCSngwYSLTF2wwmtVTdDSObQbRwvU8zN7aziAbyYvfDQjrQZ+XG8q7RhcirqBkV8Odvzc+OxyRqw2m5Rmr6IU/Cjdja5BXuKuZBlmNmh0fzZguH7EwteAh8lKwzPs+05WCbjZ2cA5YupE="
    # DOCKER_PASSWORD
    - secure: "P6wHEvcVIStEeWPVyS7DY5dEEhCTxMlQ0K6e35Q/4tj1kBvrVMquCs1r5i6TWSpVSYrEePvMabqRljShpyKJhjSJCyP4BkqXVsu9VWpI29qROEZeIGMxu2X80LfpPsvxhZeQ9dGtIUyUgSRxgwnSNI1m8Tzk8vptuDD3bX26NCQ="
    # CODECOV_TOKEN
    - secure: "b5cW5K0gK6wUqZh8lKZSmsj7Bxyh7vaGMtBOnIAWZ+ksvE1SExahvpQ/ANI+9zczBxhluFiVFgPwdmWZ0nAi4gKsmSLEigu7nQJLkeWxcfzQj8KJXtoM+Z7ykDPKP117p5Sp0GN+XhBvih/JUqRMFLp8xtIQZGYevtqqZwHm9ms="
before_install:
  # get newer version of docker-compose for variable substitution in compose files
  - curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv -v docker-compose /usr/local/bin/
install:
  - mkdir -p $TRAVIS_BUILD_DIR/docker-volumes
before_script:
  - docker version
  - docker-compose version
script:
  - if [[ "$DOCKER_USERNAME" && "$DOCKER_PASSWORD" ]]; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin; fi
  - scripts/docker test --noinput --stop --verbosity=2 --divide-depth=1 --with-timing --threshold=10 --max-test-time=29
after_success:
  # create symlink so artifacts are available
  - sudo ln -s $(pwd) /mnt/commcare-hq-ro
services:
  - docker
