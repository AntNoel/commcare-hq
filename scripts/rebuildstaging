#!/bin/bash

function usage() {
    cat << EOF
usage: $0 [-h|--help] [-v|--verbose] [--deploy|--no-push]

rebuild staging from yaml configuration (downloaded from https://github.com/dimagi/staging-branches/blob/main/commcare-hq-staging.yml)

    -h --help       print this help text
    -v --verbose    display debugging output
    --deploy        deploy after rebuild is complete
    --no-push       do not push changes (cannot be used with --deploy)
EOF
}

while [[ $# > 0 ]]
do
    key="$1"
    shift

    case $key in
      --deploy)
        deploy=y
        ;;
      -h|--help)
        usage
        exit
        ;;
      -v|--verbose)
        verbose=y
        ;;
      --no-push)
        no_push=y
        echo no-push
        ;;
      *)
        usage
        exit 1
        ;;
    esac
done

function rebuildstaging() {
    mkdir -p ./artifacts
    echo "fetching commcare-hq-staging.yml from staging-branches"
    curl --silent https://raw.githubusercontent.com/dimagi/staging-branches/main/commcare-hq-staging.yml > artifacts/staging.yml
    echo "rebuilding staging branch..."
    git-build-branch artifacts/staging.yml "$@"
}

args=''

[[ $verbose = 'y' ]] && args="$args -v"
[[ -z "$no_push" || $no_push != 'y' ]] && args="$args --push"

if [[ $deploy = 'y' && $no_push != 'y' ]]
then
    rebuildstaging $args && {
        which commcare-cloud \
        && commcare-cloud --control staging deploy --quiet \
        || echo 'Could not auto-deploy for you. Run `commcare-cloud --control staging deploy` to deploy.'
    }
else
    rebuildstaging $args
fi
