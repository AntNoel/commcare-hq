# Generated by Django 3.2.16 on 2023-04-12 19:16

import corehq.motech.dhis2.repeaters
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


class Migration(migrations.Migration):

    replaces = [('repeaters', '0001_adjust_auth_field_format'), ('repeaters', '0002_sqlrepeatrecord'), ('repeaters', '0003_migrate_connectionsettings'), ('repeaters', '0004_attempt_strings'), ('repeaters', '0005_rename_repeaterstub_to_sql_repeater'), ('repeaters', '0006_add_proxy_models'), ('repeaters', '0007_migrate_to_sql'), ('repeaters', '0008_add_related_name_in_connection_settings'), ('repeaters', '0009_add_create_update_info'), ('repeaters', '00010_add_repeater_name'), ('repeaters', '0011_alter_sqlrepeater_name'), ('repeaters', '00012_create_default_names_for_repeaters'), ('repeaters', '0013_rename_sqlrepeaters_to_repeaters'), ('repeaters', '0014_add_new_state_empty'), ('repeaters', '0015_drop_connection_settings_fk')]

    dependencies = [
        ('motech', '0007_auto_20200909_2138'),
        ('motech', '0008_requestlog_response_headers'),
        ('motech', '0011_connectionsettings_is_deleted'),
    ]

    operations = [
        migrations.CreateModel(
            name='RepeaterStub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=126)),
                ('repeater_id', models.CharField(max_length=36)),
                ('is_paused', models.BooleanField(default=False)),
                ('next_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SQLRepeatRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=126)),
                ('couch_id', models.CharField(blank=True, max_length=36, null=True)),
                ('payload_id', models.CharField(max_length=36)),
                ('state', models.TextField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Succeeded'), ('FAIL', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING')),
                ('registered_at', models.DateTimeField()),
                ('repeater_stub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_records', to='repeaters.repeaterstub')),
            ],
            options={
                'db_table': 'repeaters_repeatrecord',
                'ordering': ['registered_at'],
            },
        ),
        migrations.CreateModel(
            name='SQLRepeatRecordAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.TextField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Succeeded'), ('FAIL', 'Failed'), ('CANCELLED', 'Cancelled')])),
                ('message', models.TextField(blank=True, null=True)),
                ('traceback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('repeat_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repeaters.sqlrepeatrecord')),
            ],
            options={
                'db_table': 'repeaters_repeatrecordattempt',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='repeaterstub',
            index=models.Index(fields=['domain'], name='repeaters_r_domain_23d304_idx'),
        ),
        migrations.AddIndex(
            model_name='repeaterstub',
            index=models.Index(fields=['repeater_id'], name='repeaters_r_repeate_4c833b_idx'),
        ),
        migrations.AddIndex(
            model_name='sqlrepeatrecord',
            index=models.Index(fields=['domain'], name='repeaters_r_domain_3ae9ab_idx'),
        ),
        migrations.AddIndex(
            model_name='sqlrepeatrecord',
            index=models.Index(fields=['couch_id'], name='repeaters_r_couch_i_ea5782_idx'),
        ),
        migrations.AddIndex(
            model_name='sqlrepeatrecord',
            index=models.Index(fields=['payload_id'], name='repeaters_r_payload_f64556_idx'),
        ),
        migrations.AddIndex(
            model_name='sqlrepeatrecord',
            index=models.Index(fields=['registered_at'], name='repeaters_r_registe_b48c68_idx'),
        ),
        migrations.AlterField(
            model_name='sqlrepeatrecordattempt',
            name='message',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='sqlrepeatrecordattempt',
            name='traceback',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.CreateModel(
            name='SQLRepeater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=126)),
                ('repeater_id', models.CharField(max_length=36)),
                ('is_paused', models.BooleanField(default=False)),
                ('next_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('connection_settings', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='motech.connectionsettings')),
            ],
            options={
                'db_table': 'repeaters_repeater',
            },
        ),
        migrations.RemoveField(
            model_name='sqlrepeatrecord',
            name='repeater_stub',
        ),
        migrations.DeleteModel(
            name='RepeaterStub',
        ),
        migrations.AddField(
            model_name='sqlrepeatrecord',
            name='repeater',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='repeat_records', to='repeaters.sqlrepeater'),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name='sqlrepeater',
            index=models.Index(fields=['domain'], name='repeaters_r_domain_6fd257_idx'),
        ),
        migrations.AddIndex(
            model_name='sqlrepeater',
            index=models.Index(fields=['repeater_id'], name='repeaters_r_repeate_a7db73_idx'),
        ),
        migrations.CreateModel(
            name='SQLAppStructureRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlrepeater',),
        ),
        migrations.CreateModel(
            name='SQLBaseExpressionRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlrepeater',),
        ),
        migrations.CreateModel(
            name='SQLCaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlrepeater',),
        ),
        migrations.CreateModel(
            name='SQLFormRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlrepeater',),
        ),
        migrations.CreateModel(
            name='SQLLocationRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlrepeater',),
        ),
        migrations.CreateModel(
            name='SQLShortFormRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlrepeater',),
        ),
        migrations.CreateModel(
            name='SQLUserRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlrepeater',),
        ),
        migrations.RemoveIndex(
            model_name='sqlrepeater',
            name='repeaters_r_domain_6fd257_idx',
        ),
        migrations.RemoveIndex(
            model_name='sqlrepeater',
            name='repeaters_r_repeate_a7db73_idx',
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='format',
            field=models.CharField(max_length=64, null=True),
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='options',
            field=jsonfield.fields.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='repeater_type',
            field=models.CharField(blank=True, max_length=64),
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='request_method',
            field=models.CharField(choices=[('DELETE', 'DELETE'), ('POST', 'POST'), ('PUT', 'PUT')], default='POST', max_length=16),
        ),
        migrations.AlterField(
            model_name='sqlrepeater',
            name='domain',
            field=models.CharField(db_index=True, max_length=126),
        ),
        migrations.AlterField(
            model_name='sqlrepeater',
            name='repeater_id',
            field=models.CharField(max_length=36, unique=True),
        ),
        migrations.CreateModel(
            name='SQLBaseCOWINRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcaserepeater',),
        ),
        migrations.CreateModel(
            name='SQLCaseExpressionRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlbaseexpressionrepeater',),
        ),
        migrations.CreateModel(
            name='SQLCreateCaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcaserepeater',),
        ),
        migrations.CreateModel(
            name='SQLDhis2EntityRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcaserepeater', corehq.motech.dhis2.repeaters.Dhis2Instance),
        ),
        migrations.CreateModel(
            name='SQLDhis2Repeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlformrepeater', corehq.motech.dhis2.repeaters.Dhis2Instance),
        ),
        migrations.CreateModel(
            name='SQLFHIRRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcaserepeater',),
        ),
        migrations.CreateModel(
            name='SQLOpenmrsRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcaserepeater',),
        ),
        migrations.CreateModel(
            name='SQLUpdateCaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcaserepeater',),
        ),
        migrations.CreateModel(
            name='SQLBeneficiaryRegistrationRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlbasecowinrepeater',),
        ),
        migrations.CreateModel(
            name='SQLBeneficiaryVaccinationRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlbasecowinrepeater',),
        ),
        migrations.CreateModel(
            name='SQLDataRegistryCaseUpdateRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcreatecaserepeater',),
        ),
        migrations.CreateModel(
            name='SQLReferCaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.sqlcreatecaserepeater',),
        ),
        migrations.AlterField(
            model_name='sqlrepeater',
            name='connection_settings',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repeaters', to='motech.connectionsettings'),
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='last_modified',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='sqlrepeater',
            name='name',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.RenameModel(
                    old_name='SQLRepeater',
                    new_name='Repeater',
                ),
            ],
        ),
        migrations.DeleteModel(
            name='SQLAppStructureRepeater',
        ),
        migrations.DeleteModel(
            name='SQLBaseCOWINRepeater',
        ),
        migrations.DeleteModel(
            name='SQLBaseExpressionRepeater',
        ),
        migrations.DeleteModel(
            name='SQLBeneficiaryRegistrationRepeater',
        ),
        migrations.DeleteModel(
            name='SQLBeneficiaryVaccinationRepeater',
        ),
        migrations.DeleteModel(
            name='SQLCaseExpressionRepeater',
        ),
        migrations.DeleteModel(
            name='SQLCaseRepeater',
        ),
        migrations.DeleteModel(
            name='SQLCreateCaseRepeater',
        ),
        migrations.DeleteModel(
            name='SQLDataRegistryCaseUpdateRepeater',
        ),
        migrations.DeleteModel(
            name='SQLDhis2EntityRepeater',
        ),
        migrations.DeleteModel(
            name='SQLDhis2Repeater',
        ),
        migrations.DeleteModel(
            name='SQLFHIRRepeater',
        ),
        migrations.DeleteModel(
            name='SQLFormRepeater',
        ),
        migrations.DeleteModel(
            name='SQLLocationRepeater',
        ),
        migrations.DeleteModel(
            name='SQLOpenmrsRepeater',
        ),
        migrations.DeleteModel(
            name='SQLReferCaseRepeater',
        ),
        migrations.DeleteModel(
            name='SQLShortFormRepeater',
        ),
        migrations.DeleteModel(
            name='SQLUpdateCaseRepeater',
        ),
        migrations.DeleteModel(
            name='SQLUserRepeater',
        ),
        migrations.CreateModel(
            name='AppStructureRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.repeater',),
        ),
        migrations.CreateModel(
            name='BaseExpressionRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.repeater',),
        ),
        migrations.CreateModel(
            name='CaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.repeater',),
        ),
        migrations.CreateModel(
            name='FormRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.repeater',),
        ),
        migrations.CreateModel(
            name='LocationRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.repeater',),
        ),
        migrations.CreateModel(
            name='ShortFormRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.repeater',),
        ),
        migrations.CreateModel(
            name='UserRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.repeater',),
        ),
        migrations.CreateModel(
            name='BaseCOWINRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.caserepeater',),
        ),
        migrations.CreateModel(
            name='CaseExpressionRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.baseexpressionrepeater',),
        ),
        migrations.CreateModel(
            name='CreateCaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.caserepeater',),
        ),
        migrations.CreateModel(
            name='Dhis2EntityRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.caserepeater', corehq.motech.dhis2.repeaters.Dhis2Instance),
        ),
        migrations.CreateModel(
            name='Dhis2Repeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.formrepeater', corehq.motech.dhis2.repeaters.Dhis2Instance),
        ),
        migrations.CreateModel(
            name='FHIRRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.caserepeater',),
        ),
        migrations.CreateModel(
            name='OpenmrsRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.caserepeater',),
        ),
        migrations.CreateModel(
            name='UpdateCaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.caserepeater',),
        ),
        migrations.CreateModel(
            name='BeneficiaryRegistrationRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.basecowinrepeater',),
        ),
        migrations.CreateModel(
            name='BeneficiaryVaccinationRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.basecowinrepeater',),
        ),
        migrations.CreateModel(
            name='DataRegistryCaseUpdateRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.createcaserepeater',),
        ),
        migrations.CreateModel(
            name='ReferCaseRepeater',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('repeaters.createcaserepeater',),
        ),
        migrations.AlterField(
            model_name='sqlrepeatrecord',
            name='state',
            field=models.TextField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Succeeded'), ('FAIL', 'Failed'), ('CANCELLED', 'Cancelled'), ('EMPTY', 'Empty')], default='PENDING'),
        ),
        migrations.AlterField(
            model_name='sqlrepeatrecordattempt',
            name='state',
            field=models.TextField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Succeeded'), ('FAIL', 'Failed'), ('CANCELLED', 'Cancelled'), ('EMPTY', 'Empty')]),
        ),
        migrations.RunSQL(
            sql='\n            ALTER TABLE "repeaters_repeater"\n            DROP CONSTRAINT "repeaters_repeater_connection_settings__fb1a9503_fk_motech_co"\n        ',
            reverse_sql='\n            ALTER TABLE "repeaters_repeater"\n            ADD CONSTRAINT "repeaters_repeater_connection_settings__fb1a9503_fk_motech_co"\n            FOREIGN KEY ("connection_settings_id") REFERENCES "motech_connectionsettings" ("id")\n            DEFERRABLE INITIALLY DEFERRED\n        ',
            state_operations=[migrations.AlterField(
                model_name='repeater',
                name='connection_settings',
                field=models.IntegerField(db_index=True),
            ), migrations.RenameField(
                model_name='repeater',
                old_name='connection_settings',
                new_name='connection_settings_id',
            )],
        ),
    ]
